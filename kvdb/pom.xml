<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>kouchdb</groupId>
        <artifactId>parent</artifactId>
        <version>0.0.0.1</version>
    </parent>
    <artifactId>kvdb</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>kvdb</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <protostuff.version>1.0.8</protostuff.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javolution</groupId>
            <artifactId>javolution</artifactId>
            <version>5.5.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.4</version>
        </dependency>
        <!--      <dependency>
                  <groupId>org.codehaus.plexus</groupId>
                  <artifactId>plexus-digest</artifactId>
                  <version>1.0</version>
              </dependency>-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.web.bindery</groupId>
            <artifactId>requestfactory-server</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.jsonddl</groupId>
            <artifactId>generator</artifactId>
            <version>0.1.7.1</version>
        </dependency>
        <dependency>
            <groupId>com.dyuproject.protostuff</groupId>
            <artifactId>protostuff-core</artifactId>
            <version>${protostuff.version}</version>
        </dependency>
        <dependency>
            <groupId>com.dyuproject.protostuff</groupId>
            <artifactId>protostuff-json</artifactId>
            <version>${protostuff.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
            </configuration>
        </plugin>
            <plugin>
                <groupId>com.dyuproject.protostuff</groupId>
                <artifactId>protostuff-maven-plugin</artifactId>
                <version>${protostuff.version}</version>
                <configuration>
                    <!--<cacheProtos>true</cacheProtos>-->
                    <!--<sourceBaseDir>src/main/proto</sourceBaseDir>-->

                    <protoModules>
                        <protoModule>
                            <source>src/main/proto/Commands.proto</source>
                            <outputDir>${project.build.directory}/generated-sources</outputDir>
                            <output>java_bean</output>
                            <encoding>UTF-8</encoding>
                            <options>
                                <property>
                                    <name>builder_pattern</name>
                                </property>
                                <property>
                                <name>generate_helper_methods</name>
                            </property>
                                <property>
                                <name>generate_field_map</name>
                            </property>
                                <property>
                                    <name>separate_schema</name>
                                </property>
                            </options>
                           <!-- <options>
                                <property>
                                    <name>generate_field_map</name>
                                </property>
                            </options>-->
                        </protoModule><!--
                        <protoModule>
                            <source>src/main/proto/Commands.proto</source>
                            <outputDir>${project.build.directory}/jso/generated-sources</outputDir>
                            <output>gwt_overlay</output>
                            <encoding>UTF-8</encoding>
                            <options>
                                <property>&lt;!&ndash;generates a mapping between the field number and field name.
    If on, you can serialize json encoded messages writing either its field name or field number.
    boolean numeric = false;
    JsonIOUtil.writeTo(out, message, numeric);&ndash;&gt;
                                    generate_field_map
                                </property>
                            </options>

                        </protoModule>-->
                        <!--<protoModule>
                        <source>src/main/proto/Commands.proto</source>
                        <outputDir>${project.build.directory}/alt/generated-sources</outputDir>
                        <output>java_v2protoc_schema</output>
                        <encoding>UTF-8</encoding>
                       &lt;!&ndash; <options>
                            numeric

                            the encoded property name of a message is referenced by its field number.
                            {"firstName":"John","lastName":"Doe"} is json-serialized as {"1":"John","2":"Doe"}
                            alphanumeric
                            the encoded property name of a message is referenced by its field number prefixed by "f".
                            {"firstName":"John","lastName":"Doe"} is json-serialized as {"f1":"John","f2":"Doe"}
                            plain_overlay

                            simply generate plain overlays that basically returns the property without checks.
                            By default, the gwt overlays generated will return the field's default values if null, as configured on the .proto file.
                            dev_mode

                            additional code for overlays with enums to work on hosted mode.
                            use_global_json
                            the "parse" and "stringify" method would delegate to $wnd.JSON.parse and $wnd.JSON.stringify respectively.
                            generate_helper_methods

                            additional helper methods for repeated fields
                            ${message.name}.implements_declaration = implements com.example.Foo
                            the matching message will implement the given interface.
                            Note that gwt overlays can implement interfaces if gwt-2.0 +

                        </options>&ndash;&gt;

                    </protoModule>-->
                    </protoModules>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
